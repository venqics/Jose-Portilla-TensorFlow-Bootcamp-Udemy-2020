{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"cnn_fashion_mnist","provenance":[],"authorship_tag":"ABX9TyP5Xq/v2lkLqq+2RMntIFCo"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"gPLo0V9kcKAm","colab_type":"code","outputId":"63afd3d0-f4d9-41ea-83a0-20063d3e78b4","executionInfo":{"status":"ok","timestamp":1578559716177,"user_tz":-330,"elapsed":4576,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}},"colab":{"base_uri":"https://localhost:8080/","height":236}},"source":["#Downloading and loading the data\n","\n","from tensorflow.keras.datasets import fashion_mnist\n","(x_train,y_train), (x_test,y_test)  = fashion_mnist.load_data()"],"execution_count":0,"outputs":[{"output_type":"display_data","data":{"text/html":["<p style=\"color: red;\">\n","The default version of TensorFlow in Colab will soon switch to TensorFlow 2.x.<br>\n","We recommend you <a href=\"https://www.tensorflow.org/guide/migrate\" target=\"_blank\">upgrade</a> now \n","or ensure your notebook will continue to use TensorFlow 1.x via the <code>%tensorflow_version 1.x</code> magic:\n","<a href=\"https://colab.research.google.com/notebooks/tensorflow_version.ipynb\" target=\"_blank\">more info</a>.</p>\n"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/train-labels-idx1-ubyte.gz\n","32768/29515 [=================================] - 0s 0us/step\n","Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/train-images-idx3-ubyte.gz\n","26427392/26421880 [==============================] - 0s 0us/step\n","Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/t10k-labels-idx1-ubyte.gz\n","8192/5148 [===============================================] - 0s 0us/step\n","Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/t10k-images-idx3-ubyte.gz\n","4423680/4422102 [==============================] - 0s 0us/step\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"SRG2dIAuA8eJ","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"kTK2UZoIfSaf","colab_type":"code","outputId":"c3182119-b3ed-4920-db3c-a6d234d40c1b","executionInfo":{"status":"ok","timestamp":1578559901787,"user_tz":-330,"elapsed":72692,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}},"colab":{"base_uri":"https://localhost:8080/","height":289}},"source":["!pip uninstall tensorflow"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Uninstalling tensorflow-1.15.0:\n","  Would remove:\n","    /usr/local/bin/estimator_ckpt_converter\n","    /usr/local/bin/freeze_graph\n","    /usr/local/bin/saved_model_cli\n","    /usr/local/bin/tensorboard\n","    /usr/local/bin/tf_upgrade_v2\n","    /usr/local/bin/tflite_convert\n","    /usr/local/bin/toco\n","    /usr/local/bin/toco_from_protos\n","    /usr/local/lib/python3.6/dist-packages/tensorflow-1.15.0.dist-info/*\n","    /usr/local/lib/python3.6/dist-packages/tensorflow/*\n","    /usr/local/lib/python3.6/dist-packages/tensorflow_core/*\n","Proceed (y/n)? y\n","y\n","  Successfully uninstalled tensorflow-1.15.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"pUEMoFpPf3N7","colab_type":"code","outputId":"cf8832ee-dd21-48db-e5d6-42956f34379f","executionInfo":{"status":"ok","timestamp":1578559955592,"user_tz":-330,"elapsed":26421,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}},"colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["!pip install tensorflow==2.0.0"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Collecting tensorflow==2.0.0\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/46/0f/7bd55361168bb32796b360ad15a25de6966c9c1beb58a8e30c01c8279862/tensorflow-2.0.0-cp36-cp36m-manylinux2010_x86_64.whl (86.3MB)\n","\u001b[K     |████████████████████████████████| 86.3MB 79kB/s \n","\u001b[?25hRequirement already satisfied: absl-py>=0.7.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow==2.0.0) (0.9.0)\n","Requirement already satisfied: protobuf>=3.6.1 in /usr/local/lib/python3.6/dist-packages (from tensorflow==2.0.0) (3.10.0)\n","Requirement already satisfied: wrapt>=1.11.1 in /usr/local/lib/python3.6/dist-packages (from tensorflow==2.0.0) (1.11.2)\n","Requirement already satisfied: opt-einsum>=2.3.2 in /usr/local/lib/python3.6/dist-packages (from tensorflow==2.0.0) (3.1.0)\n","Requirement already satisfied: google-pasta>=0.1.6 in /usr/local/lib/python3.6/dist-packages (from tensorflow==2.0.0) (0.1.8)\n","Requirement already satisfied: astor>=0.6.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow==2.0.0) (0.8.1)\n","Requirement already satisfied: six>=1.10.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow==2.0.0) (1.12.0)\n","Requirement already satisfied: gast==0.2.2 in /usr/local/lib/python3.6/dist-packages (from tensorflow==2.0.0) (0.2.2)\n","Requirement already satisfied: grpcio>=1.8.6 in /usr/local/lib/python3.6/dist-packages (from tensorflow==2.0.0) (1.15.0)\n","Requirement already satisfied: wheel>=0.26 in /usr/local/lib/python3.6/dist-packages (from tensorflow==2.0.0) (0.33.6)\n","Collecting tensorflow-estimator<2.1.0,>=2.0.0\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/fc/08/8b927337b7019c374719145d1dceba21a8bb909b93b1ad6f8fb7d22c1ca1/tensorflow_estimator-2.0.1-py2.py3-none-any.whl (449kB)\n","\u001b[K     |████████████████████████████████| 450kB 44.0MB/s \n","\u001b[?25hRequirement already satisfied: termcolor>=1.1.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow==2.0.0) (1.1.0)\n","Collecting tensorboard<2.1.0,>=2.0.0\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/76/54/99b9d5d52d5cb732f099baaaf7740403e83fe6b0cedde940fabd2b13d75a/tensorboard-2.0.2-py3-none-any.whl (3.8MB)\n","\u001b[K     |████████████████████████████████| 3.8MB 33.1MB/s \n","\u001b[?25hRequirement already satisfied: numpy<2.0,>=1.16.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow==2.0.0) (1.17.5)\n","Requirement already satisfied: keras-preprocessing>=1.0.5 in /usr/local/lib/python3.6/dist-packages (from tensorflow==2.0.0) (1.1.0)\n","Requirement already satisfied: keras-applications>=1.0.8 in /usr/local/lib/python3.6/dist-packages (from tensorflow==2.0.0) (1.0.8)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.6/dist-packages (from protobuf>=3.6.1->tensorflow==2.0.0) (42.0.2)\n","Requirement already satisfied: werkzeug>=0.11.15 in /usr/local/lib/python3.6/dist-packages (from tensorboard<2.1.0,>=2.0.0->tensorflow==2.0.0) (0.16.0)\n","Requirement already satisfied: google-auth-oauthlib<0.5,>=0.4.1 in /usr/local/lib/python3.6/dist-packages (from tensorboard<2.1.0,>=2.0.0->tensorflow==2.0.0) (0.4.1)\n","Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.6/dist-packages (from tensorboard<2.1.0,>=2.0.0->tensorflow==2.0.0) (3.1.1)\n","Collecting google-auth<2,>=1.6.3\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/36/f8/84b5771faec3eba9fe0c91c8c5896364a8ba08852c0dea5ad2025026dd95/google_auth-1.10.0-py2.py3-none-any.whl (76kB)\n","\u001b[K     |████████████████████████████████| 81kB 10.8MB/s \n","\u001b[?25hRequirement already satisfied: requests<3,>=2.21.0 in /usr/local/lib/python3.6/dist-packages (from tensorboard<2.1.0,>=2.0.0->tensorflow==2.0.0) (2.21.0)\n","Requirement already satisfied: h5py in /usr/local/lib/python3.6/dist-packages (from keras-applications>=1.0.8->tensorflow==2.0.0) (2.8.0)\n","Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.6/dist-packages (from google-auth-oauthlib<0.5,>=0.4.1->tensorboard<2.1.0,>=2.0.0->tensorflow==2.0.0) (1.3.0)\n","Requirement already satisfied: cachetools<5.0,>=2.0.0 in /usr/local/lib/python3.6/dist-packages (from google-auth<2,>=1.6.3->tensorboard<2.1.0,>=2.0.0->tensorflow==2.0.0) (4.0.0)\n","Requirement already satisfied: rsa<4.1,>=3.1.4 in /usr/local/lib/python3.6/dist-packages (from google-auth<2,>=1.6.3->tensorboard<2.1.0,>=2.0.0->tensorflow==2.0.0) (4.0)\n","Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.6/dist-packages (from google-auth<2,>=1.6.3->tensorboard<2.1.0,>=2.0.0->tensorflow==2.0.0) (0.2.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.21.0->tensorboard<2.1.0,>=2.0.0->tensorflow==2.0.0) (2019.11.28)\n","Requirement already satisfied: chardet<3.1.0,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.21.0->tensorboard<2.1.0,>=2.0.0->tensorflow==2.0.0) (3.0.4)\n","Requirement already satisfied: urllib3<1.25,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.21.0->tensorboard<2.1.0,>=2.0.0->tensorflow==2.0.0) (1.24.3)\n","Requirement already satisfied: idna<2.9,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.21.0->tensorboard<2.1.0,>=2.0.0->tensorflow==2.0.0) (2.8)\n","Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.6/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<0.5,>=0.4.1->tensorboard<2.1.0,>=2.0.0->tensorflow==2.0.0) (3.1.0)\n","Requirement already satisfied: pyasn1>=0.1.3 in /usr/local/lib/python3.6/dist-packages (from rsa<4.1,>=3.1.4->google-auth<2,>=1.6.3->tensorboard<2.1.0,>=2.0.0->tensorflow==2.0.0) (0.4.8)\n","\u001b[31mERROR: tensorboard 2.0.2 has requirement grpcio>=1.24.3, but you'll have grpcio 1.15.0 which is incompatible.\u001b[0m\n","\u001b[31mERROR: google-colab 1.0.0 has requirement google-auth~=1.4.0, but you'll have google-auth 1.10.0 which is incompatible.\u001b[0m\n","Installing collected packages: tensorflow-estimator, google-auth, tensorboard, tensorflow\n","  Found existing installation: tensorflow-estimator 1.15.1\n","    Uninstalling tensorflow-estimator-1.15.1:\n","      Successfully uninstalled tensorflow-estimator-1.15.1\n","  Found existing installation: google-auth 1.4.2\n","    Uninstalling google-auth-1.4.2:\n","      Successfully uninstalled google-auth-1.4.2\n","  Found existing installation: tensorboard 1.15.0\n","    Uninstalling tensorboard-1.15.0:\n","      Successfully uninstalled tensorboard-1.15.0\n","Successfully installed google-auth-1.10.0 tensorboard-2.0.2 tensorflow-2.0.0 tensorflow-estimator-2.0.1\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.colab-display-data+json":{"pip_warning":{"packages":["google","tensorboard","tensorflow","tensorflow_core","tensorflow_estimator"]}}},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"uZkxobc4gPpy","colab_type":"code","outputId":"defc1335-3709-4c54-b5e4-e1daad2dd595","executionInfo":{"status":"ok","timestamp":1578560030123,"user_tz":-330,"elapsed":2540,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["import tensorflow as tf\n","print(tf.__version__)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["2.0.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"uDYXpMp8gnsd","colab_type":"code","colab":{}},"source":["#Downloading and loading the data\n","\n","from tensorflow.keras.datasets import fashion_mnist\n","(x_train,y_train), (x_test,y_test)  = fashion_mnist.load_data()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"zeD0yd51grj6","colab_type":"code","colab":{}},"source":["#Visualizing the data\n","#task 2: Use matplotlib to view an image from dataset. It can be any image\n","\n","import matplotlib.pyplot as plt"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"oX-THba4hITP","colab_type":"code","outputId":"a4d47f7a-ef58-4344-9f90-4c4a0edc02a4","executionInfo":{"status":"ok","timestamp":1578560172074,"user_tz":-330,"elapsed":1101,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["x_train.shape"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(60000, 28, 28)"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"code","metadata":{"id":"sSxQ4kw-hKsv","colab_type":"code","outputId":"30294af9-9781-4b17-dbbc-99cd0bd7539e","executionInfo":{"status":"ok","timestamp":1578560193737,"user_tz":-330,"elapsed":1079,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}},"colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["x_train[0]"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,\n","          0,   0,  13,  73,   0,   0,   1,   4,   0,   0,   0,   0,   1,\n","          1,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   3,\n","          0,  36, 136, 127,  62,  54,   0,   0,   0,   1,   3,   4,   0,\n","          0,   3],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   6,\n","          0, 102, 204, 176, 134, 144, 123,  23,   0,   0,   0,   0,  12,\n","         10,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0, 155, 236, 207, 178, 107, 156, 161, 109,  64,  23,  77, 130,\n","         72,  15],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   0,\n","         69, 207, 223, 218, 216, 216, 163, 127, 121, 122, 146, 141,  88,\n","        172,  66],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   1,   1,   0,\n","        200, 232, 232, 233, 229, 223, 223, 215, 213, 164, 127, 123, 196,\n","        229,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","        183, 225, 216, 223, 228, 235, 227, 224, 222, 224, 221, 223, 245,\n","        173,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","        193, 228, 218, 213, 198, 180, 212, 210, 211, 213, 223, 220, 243,\n","        202,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   3,   0,  12,\n","        219, 220, 212, 218, 192, 169, 227, 208, 218, 224, 212, 226, 197,\n","        209,  52],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   6,   0,  99,\n","        244, 222, 220, 218, 203, 198, 221, 215, 213, 222, 220, 245, 119,\n","        167,  56],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   4,   0,   0,  55,\n","        236, 228, 230, 228, 240, 232, 213, 218, 223, 234, 217, 217, 209,\n","         92,   0],\n","       [  0,   0,   1,   4,   6,   7,   2,   0,   0,   0,   0,   0, 237,\n","        226, 217, 223, 222, 219, 222, 221, 216, 223, 229, 215, 218, 255,\n","         77,   0],\n","       [  0,   3,   0,   0,   0,   0,   0,   0,   0,  62, 145, 204, 228,\n","        207, 213, 221, 218, 208, 211, 218, 224, 223, 219, 215, 224, 244,\n","        159,   0],\n","       [  0,   0,   0,   0,  18,  44,  82, 107, 189, 228, 220, 222, 217,\n","        226, 200, 205, 211, 230, 224, 234, 176, 188, 250, 248, 233, 238,\n","        215,   0],\n","       [  0,  57, 187, 208, 224, 221, 224, 208, 204, 214, 208, 209, 200,\n","        159, 245, 193, 206, 223, 255, 255, 221, 234, 221, 211, 220, 232,\n","        246,   0],\n","       [  3, 202, 228, 224, 221, 211, 211, 214, 205, 205, 205, 220, 240,\n","         80, 150, 255, 229, 221, 188, 154, 191, 210, 204, 209, 222, 228,\n","        225,   0],\n","       [ 98, 233, 198, 210, 222, 229, 229, 234, 249, 220, 194, 215, 217,\n","        241,  65,  73, 106, 117, 168, 219, 221, 215, 217, 223, 223, 224,\n","        229,  29],\n","       [ 75, 204, 212, 204, 193, 205, 211, 225, 216, 185, 197, 206, 198,\n","        213, 240, 195, 227, 245, 239, 223, 218, 212, 209, 222, 220, 221,\n","        230,  67],\n","       [ 48, 203, 183, 194, 213, 197, 185, 190, 194, 192, 202, 214, 219,\n","        221, 220, 236, 225, 216, 199, 206, 186, 181, 177, 172, 181, 205,\n","        206, 115],\n","       [  0, 122, 219, 193, 179, 171, 183, 196, 204, 210, 213, 207, 211,\n","        210, 200, 196, 194, 191, 195, 191, 198, 192, 176, 156, 167, 177,\n","        210,  92],\n","       [  0,   0,  74, 189, 212, 191, 175, 172, 175, 181, 185, 188, 189,\n","        188, 193, 198, 204, 209, 210, 210, 211, 188, 188, 194, 192, 216,\n","        170,   0],\n","       [  2,   0,   0,   0,  66, 200, 222, 237, 239, 242, 246, 243, 244,\n","        221, 220, 193, 191, 179, 182, 182, 181, 176, 166, 168,  99,  58,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,  40,  61,  44,  72,  41,  35,\n","          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0]], dtype=uint8)"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"id":"NYLfilQGhP-i","colab_type":"code","outputId":"fd7e3c02-baa9-4859-8c5b-03bb2875eb35","executionInfo":{"status":"ok","timestamp":1578560238182,"user_tz":-330,"elapsed":1135,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}},"colab":{"base_uri":"https://localhost:8080/","height":282}},"source":["plt.imshow(x_train[0])"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.image.AxesImage at 0x7f65fb521ba8>"]},"metadata":{"tags":[]},"execution_count":6},{"output_type":"display_data","data":{"image/png":"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\ngg==\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"IEh-1zCzha05","colab_type":"code","outputId":"9db6d436-13ff-4a1b-99a3-80b994c35bae","executionInfo":{"status":"ok","timestamp":1578560354585,"user_tz":-330,"elapsed":815,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["#Preprocessing the data\n","\n","#TASK 3: Normalize X train and X test data by dividing by max value of image arrays\n","\n","x_train.max()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["255"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"code","metadata":{"id":"e0TynHbvh3Tv","colab_type":"code","colab":{}},"source":["x_train = x_train/255"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"9WxO6rZhh8yV","colab_type":"code","colab":{}},"source":["x_test = x_test/255"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"cNGpErH4iI8M","colab_type":"code","colab":{}},"source":["#TASK4:Reshape the X arrays to include a 4 dimension of the single channel. \n","#Similar to what we did for the numbers MNIST data set.\n","\n","x_train = x_train.reshape(60000,28,28,1)\n","x_test = x_test.reshape(10000,28,28,1)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"Ss7cD69yjMF4","colab_type":"code","colab":{}},"source":["#TASK5:Convert y_train and y_test values to be one-hot encoded for categorical\n","#analysis by keras\n","\n","from tensorflow.keras.utils import to_categorical"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"vGv6mh9RkSdh","colab_type":"code","colab":{}},"source":["y_cat_train = to_categorical(y_train,10)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"dodUs4rBlTHo","colab_type":"code","colab":{}},"source":["y_cat_test = to_categorical(y_test,10)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"OrT0f6lAtKj3","colab_type":"code","colab":{}},"source":["#Building the model\n","#TASK 5: Use Keras to create a model consist of atleast the following layers\n","\n","\"\"\"\n","2D Convolutional Layer, filters=32 and kernel_size=(4,4)\n","\n","Pooling Layer where pool_size = (2,2)\n","\n","Flatten Layer\n","\n","Dense Layer (128 Neurons, but feel free to play around with this value), \n","RELU activation\n","\n","Final Dense Layer of 10 Neurons with a softmax activation\n","\n","Then compile the model with these parameters: loss='categorical_crossentropy', \n","optimizer='rmsprop', metrics=['accuracy']\n","\"\"\""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"-ZsQ70aMuClR","colab_type":"code","colab":{}},"source":["from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense, Conv2D, MaxPool2D, Flatten"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"6UE2DHQTuXXM","colab_type":"code","colab":{}},"source":["model = Sequential()\n","\n","#Convolution layer\n","\n","model.add(Conv2D(filters=32, kernel_size=(4,4), input_shape=(28,28,1),\n","                  activation = 'relu'))\n","\n","#Pooling layer\n","model.add(MaxPool2D(pool_size=(2,2)))\n","\n","#Flatten images from 28 by 28 to 764 before final layer\n","model.add(Flatten())\n","\n","#128 neurons in dense hidden layer\n","model.add(Dense(128, activation='relu'))\n","\n","#Last layer is calassifier, thus 10 possible classes\n","model.add(Dense(10, activation = 'softmax'))\n","\n","model.compile(loss = 'categorical_crossentropy',\n","              optimizer='adam',metrics=['accuracy'])"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"YYReO4Y4v19t","colab_type":"code","outputId":"f70b197d-61bf-4e64-9a0d-b508e5b93ebb","executionInfo":{"status":"ok","timestamp":1578564606942,"user_tz":-330,"elapsed":1313,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}},"colab":{"base_uri":"https://localhost:8080/","height":323}},"source":["model.summary()"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Model: \"sequential_2\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","conv2d_2 (Conv2D)            (None, 25, 25, 32)        544       \n","_________________________________________________________________\n","max_pooling2d_2 (MaxPooling2 (None, 12, 12, 32)        0         \n","_________________________________________________________________\n","flatten_1 (Flatten)          (None, 4608)              0         \n","_________________________________________________________________\n","dense_3 (Dense)              (None, 128)               589952    \n","_________________________________________________________________\n","dense_4 (Dense)              (None, 10)                1290      \n","=================================================================\n","Total params: 591,786\n","Trainable params: 591,786\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"gNAiqG6ov4pY","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":241},"outputId":"8c99e221-076d-4f12-ec5b-fdaa92ac4897","executionInfo":{"status":"ok","timestamp":1578567566946,"user_tz":-330,"elapsed":181245,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["#Training the model\n","#TASK6:Train fit the model to x_train set. Amount of epochs is up to you\n","\n","model.fit(x_train,y_cat_train,validation_data=(x_test,y_cat_test),epochs = 5)"],"execution_count":22,"outputs":[{"output_type":"stream","text":["Train on 60000 samples, validate on 10000 samples\n","Epoch 1/5\n","60000/60000 [==============================] - 37s 620us/sample - loss: 0.3980 - accuracy: 0.8582 - val_loss: 0.3496 - val_accuracy: 0.8745\n","Epoch 2/5\n","60000/60000 [==============================] - 36s 602us/sample - loss: 0.2721 - accuracy: 0.8999 - val_loss: 0.2900 - val_accuracy: 0.8933\n","Epoch 3/5\n","60000/60000 [==============================] - 36s 596us/sample - loss: 0.2297 - accuracy: 0.9154 - val_loss: 0.2693 - val_accuracy: 0.9009\n","Epoch 4/5\n","60000/60000 [==============================] - 35s 592us/sample - loss: 0.2001 - accuracy: 0.9260 - val_loss: 0.2636 - val_accuracy: 0.9055\n","Epoch 5/5\n","60000/60000 [==============================] - 36s 592us/sample - loss: 0.1728 - accuracy: 0.9352 - val_loss: 0.2694 - val_accuracy: 0.9054\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["<tensorflow.python.keras.callbacks.History at 0x7f65f5b49240>"]},"metadata":{"tags":[]},"execution_count":22}]},{"cell_type":"code","metadata":{"id":"UXZJ6hda8sEh","colab_type":"code","colab":{}},"source":["#Evaluating the model\n","\n","#TASK7:Show the accuracy,precision,recall,f1-score,acheived on x_test dataset."],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"Pi7U_O8S_XO-","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"c418a1aa-0243-45b1-fef3-d6f510e4cb6e","executionInfo":{"status":"ok","timestamp":1578568097763,"user_tz":-330,"elapsed":907,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["model.metrics_names"],"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['loss', 'accuracy']"]},"metadata":{"tags":[]},"execution_count":24}]},{"cell_type":"code","metadata":{"id":"GU1e3QYu_Zs-","colab_type":"code","colab":{}},"source":["import pandas as pd\n","metrics = pd.DataFrame(model.history.history)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"YzDu7G0g_qA_","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":282},"outputId":"ceaa7b4d-3780-40b3-8d0b-72c4ac8d9cd5","executionInfo":{"status":"ok","timestamp":1578568194760,"user_tz":-330,"elapsed":1327,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["metrics[['loss', 'val_loss']].plot()"],"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f65f463b048>"]},"metadata":{"tags":[]},"execution_count":26},{"output_type":"display_data","data":{"image/png":"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\nPop1cjQrAAAAAElFTkSuQmCC\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"5K_XRde0_xTN","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":282},"outputId":"1ec93379-6cf0-467e-ed69-a60423430cbe","executionInfo":{"status":"ok","timestamp":1578568233531,"user_tz":-330,"elapsed":1326,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["metrics[['accuracy','val_accuracy']].plot()"],"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f65f463bb00>"]},"metadata":{"tags":[]},"execution_count":27},{"output_type":"display_data","data":{"image/png":"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\nAAAASUVORK5CYII=\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"xlQ51-Qs_6xZ","colab_type":"code","colab":{}},"source":["from sklearn.metrics import classification_report"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"POOrlnCxADx6","colab_type":"code","colab":{}},"source":["predictions = model.predict_classes(x_test)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"lOUHMhS1AVHM","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":306},"outputId":"7270655f-03fb-4484-982d-de5318cfd5a3","executionInfo":{"status":"ok","timestamp":1578568437128,"user_tz":-330,"elapsed":1124,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["print(classification_report(y_test,predictions))"],"execution_count":31,"outputs":[{"output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.91      0.78      0.84      1000\n","           1       0.99      0.98      0.99      1000\n","           2       0.87      0.83      0.85      1000\n","           3       0.91      0.93      0.92      1000\n","           4       0.85      0.84      0.85      1000\n","           5       0.99      0.95      0.97      1000\n","           6       0.69      0.82      0.75      1000\n","           7       0.92      0.98      0.95      1000\n","           8       0.99      0.98      0.98      1000\n","           9       0.98      0.95      0.97      1000\n","\n","    accuracy                           0.91     10000\n","   macro avg       0.91      0.91      0.91     10000\n","weighted avg       0.91      0.91      0.91     10000\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"p1I_leBKA3ue","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"fLxEFfrQAYHD","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}