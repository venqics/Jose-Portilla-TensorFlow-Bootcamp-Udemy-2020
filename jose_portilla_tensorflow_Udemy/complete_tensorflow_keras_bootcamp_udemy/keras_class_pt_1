{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"keras_class_pt_1","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"arkp46xemq3w","colab_type":"code","colab":{}},"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"lUB_Et4AqLmP","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"1QepqPSSrCK7","colab_type":"code","outputId":"dbbb3158-78af-44f3-ed62-47012d71957c","executionInfo":{"status":"error","timestamp":1578290965110,"user_tz":-330,"elapsed":28420,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}},"colab":{"base_uri":"https://localhost:8080/","height":547}},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":2,"outputs":[{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m    729\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 730\u001b[0;31m                 \u001b[0mident\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreply\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msession\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrecv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstdin_socket\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    731\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/jupyter_client/session.py\u001b[0m in \u001b[0;36mrecv\u001b[0;34m(self, socket, mode, content, copy)\u001b[0m\n\u001b[1;32m    802\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 803\u001b[0;31m             \u001b[0mmsg_list\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msocket\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrecv_multipart\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    804\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mzmq\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mZMQError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/zmq/sugar/socket.py\u001b[0m in \u001b[0;36mrecv_multipart\u001b[0;34m(self, flags, copy, track)\u001b[0m\n\u001b[1;32m    465\u001b[0m         \"\"\"\n\u001b[0;32m--> 466\u001b[0;31m         \u001b[0mparts\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrecv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mflags\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrack\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtrack\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    467\u001b[0m         \u001b[0;31m# have first part already, only loop while more to receive\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32mzmq/backend/cython/socket.pyx\u001b[0m in \u001b[0;36mzmq.backend.cython.socket.Socket.recv\u001b[0;34m()\u001b[0m\n","\u001b[0;32mzmq/backend/cython/socket.pyx\u001b[0m in \u001b[0;36mzmq.backend.cython.socket.Socket.recv\u001b[0;34m()\u001b[0m\n","\u001b[0;32mzmq/backend/cython/socket.pyx\u001b[0m in \u001b[0;36mzmq.backend.cython.socket._recv_copy\u001b[0;34m()\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/zmq/backend/cython/checkrc.pxd\u001b[0m in \u001b[0;36mzmq.backend.cython.checkrc._check_rc\u001b[0;34m()\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: ","\nDuring handling of the above exception, another exception occurred:\n","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-2-d5df0069828e>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mgoogle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolab\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mdrive\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mdrive\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmount\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'/content/drive'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/google/colab/drive.py\u001b[0m in \u001b[0;36mmount\u001b[0;34m(mountpoint, force_remount, timeout_ms, use_metadata_server)\u001b[0m\n\u001b[1;32m    232\u001b[0m       \u001b[0mauth_prompt\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0md\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmatch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgroup\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m'\\nEnter your authorization code:\\n'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    233\u001b[0m       \u001b[0;32mwith\u001b[0m \u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfifo\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'w'\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mfifo_file\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 234\u001b[0;31m         \u001b[0mfifo_file\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwrite\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_getpass\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgetpass\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mauth_prompt\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m'\\n'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    235\u001b[0m       \u001b[0mwrote_to_fifo\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    236\u001b[0m   \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mwrote_to_fifo\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36mgetpass\u001b[0;34m(self, prompt, stream)\u001b[0m\n\u001b[1;32m    686\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_ident\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    687\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_header\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 688\u001b[0;31m             \u001b[0mpassword\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    689\u001b[0m         )\n\u001b[1;32m    690\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m    733\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    734\u001b[0m                 \u001b[0;31m# re-raise KeyboardInterrupt, to truncate traceback\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 735\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    736\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    737\u001b[0m                 \u001b[0;32mbreak\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}]},{"cell_type":"code","metadata":{"id":"ZKAQqcTgrCvs","colab_type":"code","colab":{}},"source":["df = pd.read_csv('/content/drive/My Drive/Colab Notebooks/cancer_classification.csv')"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"At_2cQSmsVDd","colab_type":"code","colab":{}},"source":["#EDA\n","\n","df"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"wyp9vGtXsV4Q","colab_type":"code","colab":{}},"source":["df.info()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"5Y3KgJKJs4Re","colab_type":"code","colab":{}},"source":["df.describe().transpose()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"HGDAkRWfuHh6","colab_type":"code","colab":{}},"source":["sns.countplot(x='benign_0__mal_1', data = df)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"PIKCRKtXwJ3D","colab_type":"code","colab":{}},"source":["df.corr()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"sRi_IcOcwktm","colab_type":"code","colab":{}},"source":["df.corr()['benign_0__mal_1']"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"oUM6qWGpwwRQ","colab_type":"code","colab":{}},"source":["df.corr()['benign_0__mal_1'].sort_values()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"voaar-0Gyp_8","colab_type":"code","colab":{}},"source":["df.corr()['benign_0__mal_1'][:-1].sort_values().plot(kind='bar')"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"UY4w8nOEyyq9","colab_type":"code","colab":{}},"source":["sns.heatmap(df.corr())"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"EHYWLjyUzHny","colab_type":"code","colab":{}},"source":["X = df.drop('benign_0__mal_1', axis =1).values\n","\n","y = df['benign_0__mal_1'].values"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"0V0dBlgJzviG","colab_type":"code","colab":{}},"source":["from sklearn.model_selection import train_test_split"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"PiQVY9iBz_cV","colab_type":"code","colab":{}},"source":["X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 101)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"6dW4hxxl0jbq","colab_type":"code","colab":{}},"source":["from sklearn.preprocessing import MinMaxScaler"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"ipaY2lED1UJq","colab_type":"code","colab":{}},"source":["scaler = MinMaxScaler()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"E5LBYh3y1ZsN","colab_type":"code","colab":{}},"source":["X_train = scaler.fit_transform(X_train)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"XclFghHa16gk","colab_type":"code","colab":{}},"source":["X_test = scaler.transform(X_test)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"r6ytlHrB-485","colab_type":"code","colab":{}},"source":["#Part2: Dealing with overfitting and evaluation\n","\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense, Dropout"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"_6yHVonoi1EQ","colab_type":"code","colab":{}},"source":["X_train.shape"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"HtnSfX4kjWhz","colab_type":"code","colab":{}},"source":["model = Sequential()\n","\n","model.add(Dense(30, activation = 'relu'))\n","model.add(Dense(15, activation ='relu'))\n","\n","#Binary Classification\n","\n","model.add(Dense(1,activation = 'sigmoid'))\n","\n","model.compile(loss = 'binary_crossentropy', optimizer = 'adam')"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"FRFRXnpilLF3","colab_type":"code","colab":{}},"source":["model.fit(x=X_train, y=y_train, epochs = 600, validation_data=(X_test, y_test))"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"2rsDzFzomeRd","colab_type":"code","colab":{}},"source":["losses = pd.DataFrame(model.history.history)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"VrhaKa7Dmyiq","colab_type":"code","colab":{}},"source":["losses"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"FsS5Hwamm8jn","colab_type":"code","colab":{}},"source":["losses.plot()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"Nz5jF3WSxOIA","colab_type":"code","colab":{}},"source":["model = Sequential()\n","\n","model.add(Dense(30, activation = 'relu'))\n","model.add(Dense(15, activation ='relu'))\n","\n","#Binary Classification\n","\n","model.add(Dense(1,activation = 'sigmoid'))\n","\n","model.compile(loss = 'binary_crossentropy', optimizer = 'adam')"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"zYgvce-VxKpZ","colab_type":"code","colab":{}},"source":["from tensorflow.keras.callbacks import EarlyStopping\n","\n","early_stop = EarlyStopping(monitor = 'val_loss', mode = 'min', verbose = 1, patience = 25)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"NPeyB3ESww2f","colab_type":"code","colab":{}},"source":["model.fit(x=X_train, y=y_train, epochs = 600, validation_data=(X_test, y_test), callbacks=[early_stop])"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"recPRol5xfWy","colab_type":"code","colab":{}},"source":["model_loss = pd.DataFrame(model.history.history)\n","model_loss.plot()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"Xng1I1uGxy6X","colab_type":"code","colab":{}},"source":["from tensorflow.keras.layers import Dropout\n","\n","model = Sequential()\n","\n","model.add(Dense(30, activation = 'relu'))\n","model.add(Dropout(0.5))\n","\n","model.add(Dense(15, activation ='relu'))\n","model.add(Dropout(0.5))\n","\n","#Binary Classification\n","\n","model.add(Dense(1,activation = 'sigmoid'))\n","\n","model.compile(loss = 'binary_crossentropy', optimizer = 'adam')"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"zP5A-nrAznbC","colab_type":"code","colab":{}},"source":["model.fit(x=X_train, y=y_train, epochs = 600, validation_data=(X_test, y_test), callbacks=[early_stop])"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"MYpyWKae077r","colab_type":"code","colab":{}},"source":["model_loss = pd.DataFrame(model.history.history)\n","\n","model_loss.plot()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"fi1O6eHW1nEA","colab_type":"code","colab":{}},"source":["predictions = model.predict_classes(X_test)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"N6X1qD39118a","colab_type":"code","colab":{}},"source":["from sklearn.metrics import classification_report, confusion_matrix"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"sDlDaqho2ZCC","colab_type":"code","colab":{}},"source":["print(classification_report(y_test,predictions))"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"qQQmbZP12gwp","colab_type":"code","colab":{}},"source":["print(confusion_matrix(y_test,predictions))"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"9BBH0MRl2tTN","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}