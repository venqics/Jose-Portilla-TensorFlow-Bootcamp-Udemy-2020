{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"text_generation_deep_learning","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyMXpJfuFb8g/LMH4sxwsAIr"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"2urhAAxtbnS4","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"nIzpygY7jzU5","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":54},"outputId":"cb4c48de-4fa0-48df-eae5-7d89546be4eb","executionInfo":{"status":"ok","timestamp":1578997402948,"user_tz":-330,"elapsed":1212,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"MtLYneCij0Cw","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"675cf9c4-42f4-4e39-8283-990cb311e696","executionInfo":{"status":"ok","timestamp":1578997424798,"user_tz":-330,"elapsed":963,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["%tensorflow_version 2.x"],"execution_count":1,"outputs":[{"output_type":"stream","text":["TensorFlow 2.x selected.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"34vI5yNkk6ZD","colab_type":"code","colab":{}},"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"saQ-IKtclMh6","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"01fd102f-6a5d-488e-8377-50c99c30a7ac","executionInfo":{"status":"ok","timestamp":1578997497563,"user_tz":-330,"elapsed":1036,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["tf.__version__"],"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'2.1.0-rc1'"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"id":"7oyrjy1SlRA_","colab_type":"code","colab":{}},"source":["import tensorflow as tf\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"mSDqOdjblZLN","colab_type":"code","colab":{}},"source":["path_to_file = '/content/drive/My Drive/shakespeare.txt'"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"xtnp1PZhl2pc","colab_type":"code","colab":{}},"source":["text = open(path_to_file,'r').read()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"R8Bo1ED9l9Uw","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":238},"outputId":"a2b93469-9e1e-4941-b97f-ed55ded86fb0","executionInfo":{"status":"ok","timestamp":1578997653875,"user_tz":-330,"elapsed":909,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["print(text[:500])"],"execution_count":9,"outputs":[{"output_type":"stream","text":["\n","                     1\n","  From fairest creatures we desire increase,\n","  That thereby beauty's rose might never die,\n","  But as the riper should by time decease,\n","  His tender heir might bear his memory:\n","  But thou contracted to thine own bright eyes,\n","  Feed'st thy light's flame with self-substantial fuel,\n","  Making a famine where abundance lies,\n","  Thy self thy foe, to thy sweet self too cruel:\n","  Thou that art now the world's fresh ornament,\n","  And only herald to the gaudy spring,\n","  Within thine own bu\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"s4anV4ssmAnI","colab_type":"code","colab":{}},"source":["vocab = sorted(set(text))"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"GfkIuKlKmgDd","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"outputId":"e0356119-0c27-48fd-c145-b6a63369f198","executionInfo":{"status":"ok","timestamp":1578997817390,"user_tz":-330,"elapsed":1119,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["vocab"],"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['\\n',\n"," ' ',\n"," '!',\n"," '\"',\n"," '&',\n"," \"'\",\n"," '(',\n"," ')',\n"," ',',\n"," '-',\n"," '.',\n"," '0',\n"," '1',\n"," '2',\n"," '3',\n"," '4',\n"," '5',\n"," '6',\n"," '7',\n"," '8',\n"," '9',\n"," ':',\n"," ';',\n"," '<',\n"," '>',\n"," '?',\n"," 'A',\n"," 'B',\n"," 'C',\n"," 'D',\n"," 'E',\n"," 'F',\n"," 'G',\n"," 'H',\n"," 'I',\n"," 'J',\n"," 'K',\n"," 'L',\n"," 'M',\n"," 'N',\n"," 'O',\n"," 'P',\n"," 'Q',\n"," 'R',\n"," 'S',\n"," 'T',\n"," 'U',\n"," 'V',\n"," 'W',\n"," 'X',\n"," 'Y',\n"," 'Z',\n"," '[',\n"," ']',\n"," '_',\n"," '`',\n"," 'a',\n"," 'b',\n"," 'c',\n"," 'd',\n"," 'e',\n"," 'f',\n"," 'g',\n"," 'h',\n"," 'i',\n"," 'j',\n"," 'k',\n"," 'l',\n"," 'm',\n"," 'n',\n"," 'o',\n"," 'p',\n"," 'q',\n"," 'r',\n"," 's',\n"," 't',\n"," 'u',\n"," 'v',\n"," 'w',\n"," 'x',\n"," 'y',\n"," 'z',\n"," '|',\n"," '}']"]},"metadata":{"tags":[]},"execution_count":12}]},{"cell_type":"code","metadata":{"id":"zyWIKDAJmpkh","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"0e4bf1dc-0733-41dc-8b8a-9ad069d5c631","executionInfo":{"status":"ok","timestamp":1578997835270,"user_tz":-330,"elapsed":1350,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["len(vocab)"],"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["84"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"code","metadata":{"id":"P8-_cHFZmt0G","colab_type":"code","colab":{}},"source":["#Text processing\n","\n","char_to_ind = {char:ind for ind,char in enumerate(vocab)}"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"E4b6a3EUnh_7","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"6e55447a-0597-458a-c888-8eb70e7f8f1c","executionInfo":{"status":"ok","timestamp":1578998062279,"user_tz":-330,"elapsed":785,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["char_to_ind['H']"],"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["33"]},"metadata":{"tags":[]},"execution_count":15}]},{"cell_type":"code","metadata":{"id":"1VZUVao9nljs","colab_type":"code","colab":{}},"source":["ind_to_char = np.array(vocab)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"5dKJ9VH5oB5h","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"95df95ff-5058-4c7c-9a6b-35d04693b75f","executionInfo":{"status":"ok","timestamp":1578998210890,"user_tz":-330,"elapsed":1030,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["ind_to_char[33]"],"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'H'"]},"metadata":{"tags":[]},"execution_count":17}]},{"cell_type":"code","metadata":{"id":"NWBxU4aJoJvs","colab_type":"code","colab":{}},"source":["encoded_text = np.array([char_to_ind[c] for c in text])"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"7PZP-9oXo7Xr","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"a2f97151-b7ec-455e-f71a-cce8c0101b47","executionInfo":{"status":"ok","timestamp":1578998437550,"user_tz":-330,"elapsed":1287,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["encoded_text"],"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 0,  1,  1, ..., 30, 39, 29])"]},"metadata":{"tags":[]},"execution_count":19}]},{"cell_type":"code","metadata":{"id":"pBmzATB1pBEL","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"7ac8ba19-701d-45af-be90-56c22b46da36","executionInfo":{"status":"ok","timestamp":1578998494844,"user_tz":-330,"elapsed":1041,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["encoded_text.shape"],"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(5445609,)"]},"metadata":{"tags":[]},"execution_count":20}]},{"cell_type":"code","metadata":{"id":"khVYlLtZpPHD","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":238},"outputId":"0dbc42c4-9028-4465-b185-381f1ef36c0b","executionInfo":{"status":"ok","timestamp":1578999274506,"user_tz":-330,"elapsed":1184,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["print(text[:500])"],"execution_count":21,"outputs":[{"output_type":"stream","text":["\n","                     1\n","  From fairest creatures we desire increase,\n","  That thereby beauty's rose might never die,\n","  But as the riper should by time decease,\n","  His tender heir might bear his memory:\n","  But thou contracted to thine own bright eyes,\n","  Feed'st thy light's flame with self-substantial fuel,\n","  Making a famine where abundance lies,\n","  Thy self thy foe, to thy sweet self too cruel:\n","  Thou that art now the world's fresh ornament,\n","  And only herald to the gaudy spring,\n","  Within thine own bu\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"yy2T8N-zsNbR","colab_type":"code","colab":{}},"source":["line = \"From fairest creatures we desire increase\""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"4hyjbGJXsPjf","colab_type":"code","colab":{}},"source":["part_stanza = \"\"\"From fairest creatures we desire increase,\n","  That thereby beauty's rose might never die,\n","  But as the riper should by time decease,\"\"\""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"SRPn_qgasSJE","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"cb6b6423-91d0-4c05-9116-432bb60f6ade","executionInfo":{"status":"ok","timestamp":1578999301548,"user_tz":-330,"elapsed":1006,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["len(part_stanza)"],"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["131"]},"metadata":{"tags":[]},"execution_count":24}]},{"cell_type":"code","metadata":{"id":"u_7jnlAxsUEe","colab_type":"code","colab":{}},"source":["seq_len = 120"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"79X_Tl_zsYlD","colab_type":"code","colab":{}},"source":["total_num_seq = len(text)//(seq_len+1)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"gt7XOYj7sa6l","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"0723d36d-d464-4ced-fab4-bdecb9f769e7","executionInfo":{"status":"ok","timestamp":1578999346335,"user_tz":-330,"elapsed":1138,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["total_num_seq"],"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["45005"]},"metadata":{"tags":[]},"execution_count":27}]},{"cell_type":"code","metadata":{"id":"pZbtWqrYse-U","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"outputId":"77384436-b4bd-41d0-beb0-d22244d231e2","executionInfo":{"status":"ok","timestamp":1578999378469,"user_tz":-330,"elapsed":1123,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["\n","# Create Training Sequences\n","char_dataset = tf.data.Dataset.from_tensor_slices(encoded_text)\n","\n","for i in char_dataset.take(500):\n","     print(ind_to_char[i.numpy()])"],"execution_count":28,"outputs":[{"output_type":"stream","text":["\n","\n"," \n"," \n"," \n"," \n"," \n"," \n"," \n"," \n"," \n"," \n"," \n"," \n"," \n"," \n"," \n"," \n"," \n"," \n"," \n"," \n"," \n","1\n","\n","\n"," \n"," \n","F\n","r\n","o\n","m\n"," \n","f\n","a\n","i\n","r\n","e\n","s\n","t\n"," \n","c\n","r\n","e\n","a\n","t\n","u\n","r\n","e\n","s\n"," \n","w\n","e\n"," \n","d\n","e\n","s\n","i\n","r\n","e\n"," \n","i\n","n\n","c\n","r\n","e\n","a\n","s\n","e\n",",\n","\n","\n"," \n"," \n","T\n","h\n","a\n","t\n"," \n","t\n","h\n","e\n","r\n","e\n","b\n","y\n"," \n","b\n","e\n","a\n","u\n","t\n","y\n","'\n","s\n"," \n","r\n","o\n","s\n","e\n"," \n","m\n","i\n","g\n","h\n","t\n"," \n","n\n","e\n","v\n","e\n","r\n"," \n","d\n","i\n","e\n",",\n","\n","\n"," \n"," \n","B\n","u\n","t\n"," \n","a\n","s\n"," \n","t\n","h\n","e\n"," \n","r\n","i\n","p\n","e\n","r\n"," \n","s\n","h\n","o\n","u\n","l\n","d\n"," \n","b\n","y\n"," \n","t\n","i\n","m\n","e\n"," \n","d\n","e\n","c\n","e\n","a\n","s\n","e\n",",\n","\n","\n"," \n"," \n","H\n","i\n","s\n"," \n","t\n","e\n","n\n","d\n","e\n","r\n"," \n","h\n","e\n","i\n","r\n"," \n","m\n","i\n","g\n","h\n","t\n"," \n","b\n","e\n","a\n","r\n"," \n","h\n","i\n","s\n"," \n","m\n","e\n","m\n","o\n","r\n","y\n",":\n","\n","\n"," \n"," \n","B\n","u\n","t\n"," \n","t\n","h\n","o\n","u\n"," \n","c\n","o\n","n\n","t\n","r\n","a\n","c\n","t\n","e\n","d\n"," \n","t\n","o\n"," \n","t\n","h\n","i\n","n\n","e\n"," \n","o\n","w\n","n\n"," \n","b\n","r\n","i\n","g\n","h\n","t\n"," \n","e\n","y\n","e\n","s\n",",\n","\n","\n"," \n"," \n","F\n","e\n","e\n","d\n","'\n","s\n","t\n"," \n","t\n","h\n","y\n"," \n","l\n","i\n","g\n","h\n","t\n","'\n","s\n"," \n","f\n","l\n","a\n","m\n","e\n"," \n","w\n","i\n","t\n","h\n"," \n","s\n","e\n","l\n","f\n","-\n","s\n","u\n","b\n","s\n","t\n","a\n","n\n","t\n","i\n","a\n","l\n"," \n","f\n","u\n","e\n","l\n",",\n","\n","\n"," \n"," \n","M\n","a\n","k\n","i\n","n\n","g\n"," \n","a\n"," \n","f\n","a\n","m\n","i\n","n\n","e\n"," \n","w\n","h\n","e\n","r\n","e\n"," \n","a\n","b\n","u\n","n\n","d\n","a\n","n\n","c\n","e\n"," \n","l\n","i\n","e\n","s\n",",\n","\n","\n"," \n"," \n","T\n","h\n","y\n"," \n","s\n","e\n","l\n","f\n"," \n","t\n","h\n","y\n"," \n","f\n","o\n","e\n",",\n"," \n","t\n","o\n"," \n","t\n","h\n","y\n"," \n","s\n","w\n","e\n","e\n","t\n"," \n","s\n","e\n","l\n","f\n"," \n","t\n","o\n","o\n"," \n","c\n","r\n","u\n","e\n","l\n",":\n","\n","\n"," \n"," \n","T\n","h\n","o\n","u\n"," \n","t\n","h\n","a\n","t\n"," \n","a\n","r\n","t\n"," \n","n\n","o\n","w\n"," \n","t\n","h\n","e\n"," \n","w\n","o\n","r\n","l\n","d\n","'\n","s\n"," \n","f\n","r\n","e\n","s\n","h\n"," \n","o\n","r\n","n\n","a\n","m\n","e\n","n\n","t\n",",\n","\n","\n"," \n"," \n","A\n","n\n","d\n"," \n","o\n","n\n","l\n","y\n"," \n","h\n","e\n","r\n","a\n","l\n","d\n"," \n","t\n","o\n"," \n","t\n","h\n","e\n"," \n","g\n","a\n","u\n","d\n","y\n"," \n","s\n","p\n","r\n","i\n","n\n","g\n",",\n","\n","\n"," \n"," \n","W\n","i\n","t\n","h\n","i\n","n\n"," \n","t\n","h\n","i\n","n\n","e\n"," \n","o\n","w\n","n\n"," \n","b\n","u\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"4Wiilh1ism0l","colab_type":"code","colab":{}},"source":["sequences = char_dataset.batch(seq_len+1, drop_remainder=True)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"jnHT0Qpcs788","colab_type":"code","colab":{}},"source":["def create_seq_targets(seq):\n","    input_txt = seq[:-1]\n","    target_txt = seq[1:]\n","    return input_txt, target_txt"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"XzRcuoEVto1M","colab_type":"code","colab":{}},"source":["dataset = sequences.map(create_seq_targets)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"RMAfcmmFtt6H","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":374},"outputId":"489ceecf-0bd8-4708-bf32-ed231181085d","executionInfo":{"status":"ok","timestamp":1578999970051,"user_tz":-330,"elapsed":846,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["for input_txt, target_txt in  dataset.take(1):\n","    print(input_txt.numpy())\n","    print(''.join(ind_to_char[input_txt.numpy()]))\n","    print('\\n')\n","    print(target_txt.numpy())\n","    # There is an extra whitespace!\n","    print(''.join(ind_to_char[target_txt.numpy()]))"],"execution_count":32,"outputs":[{"output_type":"stream","text":["[ 0  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1 12  0\n","  1  1 31 73 70 68  1 61 56 64 73 60 74 75  1 58 73 60 56 75 76 73 60 74\n","  1 78 60  1 59 60 74 64 73 60  1 64 69 58 73 60 56 74 60  8  0  1  1 45\n"," 63 56 75  1 75 63 60 73 60 57 80  1 57 60 56 76 75 80  5 74  1 73 70 74\n"," 60  1 68 64 62 63 75  1 69 60 77 60 73  1 59 64 60  8  0  1  1 27 76 75]\n","\n","                     1\n","  From fairest creatures we desire increase,\n","  That thereby beauty's rose might never die,\n","  But\n","\n","\n","[ 1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1 12  0  1\n","  1 31 73 70 68  1 61 56 64 73 60 74 75  1 58 73 60 56 75 76 73 60 74  1\n"," 78 60  1 59 60 74 64 73 60  1 64 69 58 73 60 56 74 60  8  0  1  1 45 63\n"," 56 75  1 75 63 60 73 60 57 80  1 57 60 56 76 75 80  5 74  1 73 70 74 60\n","  1 68 64 62 63 75  1 69 60 77 60 73  1 59 64 60  8  0  1  1 27 76 75  1]\n","                     1\n","  From fairest creatures we desire increase,\n","  That thereby beauty's rose might never die,\n","  But \n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"0wkOcNBJu3UI","colab_type":"code","colab":{}},"source":["# Batch size\n","batch_size = 128\n","\n","# Buffer size to shuffle the dataset so it doesn't attempt to shuffle\n","# the entire sequence in memory. Instead, it maintains a buffer in which it shuffles elements\n","buffer_size = 10000\n","\n","dataset = dataset.shuffle(buffer_size).batch(batch_size, drop_remainder=True)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"yrRqQcxIwDrn","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"051be15f-d96b-444b-d365-45f413fd809a","executionInfo":{"status":"ok","timestamp":1579000331114,"user_tz":-330,"elapsed":1070,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["dataset"],"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<BatchDataset shapes: ((128, 120), (128, 120)), types: (tf.int64, tf.int64)>"]},"metadata":{"tags":[]},"execution_count":34}]},{"cell_type":"code","metadata":{"id":"lcmQsPpmwPYl","colab_type":"code","colab":{}},"source":["#Creating the model\n","\n","# Length of the vocabulary in chars\n","vocab_size = len(vocab)\n","\n","embed_dim = 64"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"yqB-Rgtq0qas","colab_type":"code","colab":{}},"source":["rnn_neurons = 1026"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"QUi3kzAU0x_F","colab_type":"code","colab":{}},"source":["from tensorflow.keras.losses import sparse_categorical_crossentropy\n","def sparse_cat_loss(y_true,y_pred):\n","    return sparse_categorical_crossentropy(y_true, y_pred, from_logits=True)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"RRVCC5bu11uy","colab_type":"code","colab":{}},"source":["from tensorflow import keras\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Embedding, GRU, Dense"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"2W7R7wzz1PEx","colab_type":"code","colab":{}},"source":["def create_model(vocab_size, embed_dim, rnn_neurons, batch_size):\n","    model = Sequential()\n","    model.add(Embedding(vocab_size, embed_dim,batch_input_shape=[batch_size, None]))\n","    model.add(GRU(rnn_neurons,return_sequences=True,stateful=True,recurrent_initializer='glorot_uniform'))\n","    # Final Dense Layer to Predict\n","    model.add(Dense(vocab_size))\n","    model.compile(optimizer='adam', loss=sparse_cat_loss) \n","    return model"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"E1dsSsBD3utW","colab_type":"code","colab":{}},"source":["model = create_model(\n","  vocab_size = vocab_size,\n","  embed_dim=embed_dim,\n","  rnn_neurons=rnn_neurons,\n","  batch_size=batch_size)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"CeXWXGFt3z0I","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":255},"outputId":"08d74672-7b00-4b9c-97f9-3f90aa739dd8","executionInfo":{"status":"ok","timestamp":1579002386760,"user_tz":-330,"elapsed":1035,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["model.summary()"],"execution_count":43,"outputs":[{"output_type":"stream","text":["Model: \"sequential\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding (Embedding)        (128, None, 64)           5376      \n","_________________________________________________________________\n","gru (GRU)                    (128, None, 1026)         3361176   \n","_________________________________________________________________\n","dense (Dense)                (128, None, 84)           86268     \n","=================================================================\n","Total params: 3,452,820\n","Trainable params: 3,452,820\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"vRK_S1ia4FSi","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"7ecf263e-7494-401c-857a-d46a206e3808","executionInfo":{"status":"ok","timestamp":1579003720474,"user_tz":-330,"elapsed":6370,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["for input_example_batch, target_example_batch in dataset.take(1):\n","\n","  # Predict off some random batch\n","  example_batch_predictions = model(input_example_batch)\n","\n","  # Display the dimensions of the predictions\n","  print(example_batch_predictions.shape, \" <=== (batch_size, sequence_length, vocab_size)\")\n"],"execution_count":44,"outputs":[{"output_type":"stream","text":["(128, 120, 84)  <=== (batch_size, sequence_length, vocab_size)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"2ktlDjzH9JkA","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"outputId":"ff3cb44f-8ccf-4384-e7a9-38ffb834cd87","executionInfo":{"status":"ok","timestamp":1579004699802,"user_tz":-330,"elapsed":883,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["example_batch_predictions"],"execution_count":45,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(128, 120, 84), dtype=float32, numpy=\n","array([[[-4.56348178e-04, -1.35174766e-03, -2.44863541e-03, ...,\n","          4.08284971e-03, -4.37377440e-03, -8.67382332e-04],\n","        [ 1.71654799e-04, -6.93443744e-03, -5.56120928e-03, ...,\n","          2.80845701e-03,  2.28220061e-03,  8.67365394e-04],\n","        [ 2.80575221e-03, -5.00096288e-03, -3.34897544e-04, ...,\n","         -1.29732885e-03,  3.86440335e-03,  1.69925438e-03],\n","        ...,\n","        [ 7.75126449e-04, -8.75924015e-04, -1.70355232e-03, ...,\n","          1.64760719e-03, -2.91816704e-03, -2.04996835e-03],\n","        [-4.33963910e-03, -6.27442403e-03,  2.02740333e-03, ...,\n","         -2.01433245e-03, -3.01582552e-03, -3.77086049e-04],\n","        [-5.84235182e-04,  8.82888271e-04,  3.30586173e-03, ...,\n","          4.99091065e-03, -7.85854063e-04, -8.02748650e-03]],\n","\n","       [[-6.80859317e-04,  2.31948472e-03,  5.29251818e-04, ...,\n","         -8.26089527e-04,  5.43764746e-03,  4.57212701e-03],\n","        [-5.69075299e-03, -3.12691834e-03,  3.15225776e-03, ...,\n","         -3.10155912e-03,  6.00948697e-04,  5.44631016e-03],\n","        [-6.05127309e-03,  1.97472563e-03,  1.81392615e-03, ...,\n","         -1.03659835e-03,  1.26288377e-03,  4.50717751e-03],\n","        ...,\n","        [ 4.84277168e-03, -6.58184150e-03,  5.04572736e-03, ...,\n","         -3.74312396e-03,  6.69804122e-03,  7.03172991e-03],\n","        [ 4.68288595e-03, -6.04207441e-03,  5.33796055e-03, ...,\n","         -3.76439653e-03,  7.09743379e-03,  6.63853949e-03],\n","        [ 4.40394972e-03, -5.72463172e-03,  5.33949537e-03, ...,\n","         -3.86816380e-03,  7.27756415e-03,  6.27804315e-03]],\n","\n","       [[-6.80859317e-04,  2.31948472e-03,  5.29251818e-04, ...,\n","         -8.26089527e-04,  5.43764746e-03,  4.57212701e-03],\n","        [-5.37724560e-03,  5.31529018e-04,  2.53318460e-03, ...,\n","          4.62656375e-03,  3.62137519e-03,  1.92508684e-03],\n","        [-2.45702453e-03,  5.77998906e-03,  2.53008446e-03, ...,\n","          9.62943584e-03,  1.54078961e-03, -7.04055699e-03],\n","        ...,\n","        [-6.65986026e-03, -4.80889296e-03,  1.20664190e-03, ...,\n","         -5.45663806e-03,  1.62114529e-03,  1.64947752e-03],\n","        [-4.43344517e-03,  5.03126998e-03, -1.19681796e-03, ...,\n","          2.92650424e-03,  1.17283873e-03, -1.39038567e-03],\n","        [ 3.45098856e-03,  2.91482313e-03,  4.24981583e-03, ...,\n","          1.85382797e-03, -5.33752609e-04, -3.52686271e-03]],\n","\n","       ...,\n","\n","       [[-2.03709211e-03,  6.40453165e-03, -7.56221591e-03, ...,\n","          1.14833955e-02,  9.22605977e-04, -1.10615534e-03],\n","        [ 9.98867326e-04,  2.84647569e-03, -5.50670270e-03, ...,\n","          7.24312803e-03,  4.42142924e-03,  3.07272165e-03],\n","        [-9.15680081e-04,  8.73491075e-03, -9.69987176e-03, ...,\n","          1.51799778e-02,  3.03780450e-03,  4.25477891e-04],\n","        ...,\n","        [-4.00794204e-04,  9.19724349e-03, -6.11438788e-03, ...,\n","          1.16049945e-02,  7.82645866e-03, -6.48304238e-04],\n","        [ 2.07345211e-03,  3.65807931e-03, -3.24312481e-03, ...,\n","          8.17521941e-03, -7.72323168e-04, -4.65360237e-03],\n","        [ 2.42970558e-03,  6.06391695e-04, -4.55408543e-03, ...,\n","          6.38873503e-03,  3.14822327e-03,  2.07109912e-03]],\n","\n","       [[-3.43825016e-03,  2.78724474e-03, -1.32725283e-03, ...,\n","          6.26679335e-04,  4.62535536e-04,  2.48062657e-04],\n","        [-5.37858671e-03,  3.24283261e-03, -2.41492037e-03, ...,\n","          1.19634415e-03, -2.21735754e-04,  6.97377254e-06],\n","        [-3.25452117e-03, -5.46394149e-03, -5.63853653e-03, ...,\n","          1.81630568e-03,  4.24657157e-03,  2.38354667e-03],\n","        ...,\n","        [-5.89199178e-03, -2.76966696e-03,  5.20473300e-03, ...,\n","         -2.55966908e-03,  2.30273581e-03,  5.39294071e-03],\n","        [ 9.40856349e-04,  3.69434361e-03,  5.73076960e-03, ...,\n","         -1.58426155e-05, -3.49775015e-04,  7.68914772e-03],\n","        [-6.60463178e-04,  7.01105548e-03,  2.10965984e-03, ...,\n","          6.72848243e-03, -2.35789543e-04,  2.12339521e-03]],\n","\n","       [[ 2.20908946e-03, -2.15114560e-03,  1.81701942e-03, ...,\n","         -2.13291170e-03,  3.62355821e-03,  3.26766423e-03],\n","        [ 1.81483105e-04,  1.04271492e-03,  1.76948681e-03, ...,\n","         -1.70549098e-03,  7.46376533e-03,  6.24057092e-03],\n","        [-2.40152236e-03, -8.07277579e-03,  6.28767395e-03, ...,\n","         -1.61274313e-03,  8.02703574e-03,  7.66291609e-03],\n","        ...,\n","        [-4.29363083e-03, -4.85610496e-03, -2.75692693e-03, ...,\n","          2.19688192e-03,  7.77144823e-03, -1.37762784e-03],\n","        [-2.22336850e-04, -3.01727816e-03,  1.15677388e-03, ...,\n","         -1.82199222e-03,  7.37930369e-03,  6.23744214e-04],\n","        [-5.26002888e-03, -1.99619215e-03,  1.16168335e-03, ...,\n","          2.42673373e-03,  5.49367955e-03, -2.71199713e-03]]],\n","      dtype=float32)>"]},"metadata":{"tags":[]},"execution_count":45}]},{"cell_type":"code","metadata":{"id":"gaAWhafSA6CE","colab_type":"code","colab":{}},"source":["sampled_indices = tf.random.categorical(example_batch_predictions[0], num_samples=1)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"1Zn6ONoMDZfG","colab_type":"code","colab":{}},"source":["sampled_indices = tf.squeeze(sampled_indices,axis=-1).numpy()\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"JRee4HKbA-np","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":153},"outputId":"6072f55c-641e-4673-c459-3a5f2c2fed30","executionInfo":{"status":"ok","timestamp":1579005378861,"user_tz":-330,"elapsed":854,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["sampled_indices"],"execution_count":48,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([38, 54, 44,  5, 28, 37, 67, 62,  4, 53, 64, 40, 36, 83, 70, 76, 35,\n","       53, 48, 46, 83,  0, 73, 36, 73, 12, 35, 83, 30, 55, 21, 46, 76, 79,\n","       65, 53, 36, 76, 24,  9, 44, 67, 22, 54,  8, 30, 77, 63, 56,  5, 38,\n","       77, 72, 72, 47, 63, 26,  1,  7, 20, 39, 43, 34, 31, 36, 27, 74,  2,\n","       22, 18,  6, 52, 77, 40, 12, 46, 69, 19, 49, 44, 38, 65, 73, 83, 60,\n","       15, 49, 51, 55, 39, 48, 16, 77, 80,  8,  9, 52, 31, 48, 29, 83, 17,\n","       45, 55, 71, 47, 58, 83, 20, 38, 77, 33,  9, 80, 75, 73, 41, 47, 25,\n","       50])"]},"metadata":{"tags":[]},"execution_count":48}]},{"cell_type":"code","metadata":{"id":"UmsXUxWkDf1B","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":224},"outputId":"7d1e2946-b29e-4639-9789-ab965df6c50c","executionInfo":{"status":"ok","timestamp":1579005398896,"user_tz":-330,"elapsed":1280,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["print(\"Given the input seq: \\n\")\n","print(\"\".join(ind_to_char[input_example_batch[0]]))\n","print('\\n')\n","print(\"Next Char Predictions: \\n\")\n","print(\"\".join(ind_to_char[sampled_indices ]))\n"],"execution_count":49,"outputs":[{"output_type":"stream","text":["Given the input seq: \n","\n","By children's eyes, her husband's shape in mind:\n","  Look what an unthrift in the world doth spend\n","  Shifts but his place,\n","\n","\n","Next Char Predictions: \n","\n","M_S'CLlg&]iOK}ouJ]WU}\n","rKr1J}E`:Uuxj]Ku>-Sl;_,Evha'MvqqVhA )9NRIFKBs!;7([vO1Un8XSMjr}e4XZ`NW5vy,-[FWD}6T`pVc}9MvH-ytrPV?Y\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"gm9yTw2yDknN","colab_type":"code","colab":{}},"source":["epochs = 30"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"slTABDdfEKpZ","colab_type":"code","colab":{}},"source":["from tensorflow.keras.models import load_model"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"s6gv_DxjE_Ze","colab_type":"code","colab":{}},"source":["model = create_model(vocab_size, embed_dim, rnn_neurons, batch_size=1)\n","\n","model.load_weights('/content/drive/My Drive/shakespeare_gen.h5')\n","\n","model.build(tf.TensorShape([1, None]))\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"MeBVVT9_Fe9J","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":255},"outputId":"6b568db3-a560-4426-f019-5c4e27b6676a","executionInfo":{"status":"ok","timestamp":1579005920101,"user_tz":-330,"elapsed":872,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["model.summary()"],"execution_count":55,"outputs":[{"output_type":"stream","text":["Model: \"sequential_1\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_1 (Embedding)      (1, None, 64)             5376      \n","_________________________________________________________________\n","gru_1 (GRU)                  (1, None, 1026)           3361176   \n","_________________________________________________________________\n","dense_1 (Dense)              (1, None, 84)             86268     \n","=================================================================\n","Total params: 3,452,820\n","Trainable params: 3,452,820\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"OZiy8dUqFj-C","colab_type":"code","colab":{}},"source":["def generate_text(model, start_seed,gen_size=500,temp=1.0):\n","  '''\n","  model: Trained Model to Generate Text\n","  start_seed: Intial Seed text in string form\n","  gen_size: Number of characters to generate\n","\n","  Basic idea behind this function is to take in some seed text, format it so\n","  that it is in the correct shape for our network, then loop the sequence as\n","  we keep adding our own predicted characters. Similar to our work in the RNN\n","  time series problems.\n","  '''\n","\n","  # Number of characters to generate\n","  num_generate = gen_size\n","\n","  # Vecotrizing starting seed text\n","  input_eval = [char_to_ind[s] for s in start_seed]\n","\n","  # Expand to match batch format shape\n","  input_eval = tf.expand_dims(input_eval, 0)\n","\n","  # Empty list to hold resulting generated text\n","  text_generated = []\n","\n","  # Temperature effects randomness in our resulting text\n","  # The term is derived from entropy/thermodynamics.\n","  # The temperature is used to effect probability of next characters.\n","  # Higher probability == lesss surprising/ more expected\n","  # Lower temperature == more surprising / less expected\n"," \n","  temperature = temp\n","\n","  # Here batch size == 1\n","  model.reset_states()\n","\n","  for i in range(num_generate):\n","\n","      # Generate Predictions\n","      predictions = model(input_eval)\n","\n","      # Remove the batch shape dimension\n","      predictions = tf.squeeze(predictions, 0)\n","\n","      # Use a cateogircal disitribution to select the next character\n","      predictions = predictions / temperature\n","      predicted_id = tf.random.categorical(predictions, num_samples=1)[-1,0].numpy()\n","\n","      # Pass the predicted charracter for the next input\n","      input_eval = tf.expand_dims([predicted_id], 0)\n","\n","      # Transform back to character letter\n","      text_generated.append(ind_to_char[predicted_id])\n","\n","  return (start_seed + ''.join(text_generated))"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"uR-hM5dKKJ6J","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":391},"outputId":"2bc9e494-ec1b-4ebf-ed37-95b66415c5a1","executionInfo":{"status":"ok","timestamp":1579007176071,"user_tz":-330,"elapsed":9635,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["print(generate_text(model,\"JULIET\",gen_size=1000))"],"execution_count":57,"outputs":[{"output_type":"stream","text":["JULIETH\n","SCANUS. God-a-bawd, my lords; but therefore hencefore thou pluck'd it.\n","                                         Seans\n","    from Maltows. Have we paris is too peev'd by the gentle-varness cast not\n","    Herria can be true disposed for the\n","       The pencil I  mortal!\n","    He was fair day; no plants she-pale perdition recreared\n","    Now give thee filled and abuse on his,\n","    Which niece Philip's bounteous Naptuis Touching himself was\n","    As he'll a-day, the work debateth muze\n","    Unto the gumbomm?\n","  MOTH. Thus, let us know; so she so like your labour.\n","  CAMILLO. By heaven, sir, you have nothing good at the\n","    Parasis; for they have sworn they say a raspace; an\n","    hour, I prithee reason. \"Sicaliment!\n","  lord; you to your joys-\n","    Thy heart is to go th,   Is deeds accord in prison.\n","  EGBOW VARRO'S SERVANT. My lord, this is my purpose; what he got them?\n","  LUCULIUS. My gracious lord, 'tis wit.\n","  MIRANDA. You live.  \n","  PORTIA. Is that the Lord's debt them here?\n","  DUKE. Why should hence clapp'd\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"6ucKYV6KKUVM","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}