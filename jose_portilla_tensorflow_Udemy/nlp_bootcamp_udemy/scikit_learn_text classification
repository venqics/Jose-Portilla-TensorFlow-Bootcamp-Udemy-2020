{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"scikit_learn_text classification","provenance":[],"authorship_tag":"ABX9TyNdNKkVRAXh/Ta0fP2kO+ha"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"ZDNPnOKq-Bh6","colab_type":"code","colab":{}},"source":["import numpy as np\n","import pandas as pd"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"IYrLc13eRF30","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"A8PUtOmpXg2t","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":122},"outputId":"6f99b85d-01d8-44fe-c24f-7bcb107174bb","executionInfo":{"status":"ok","timestamp":1578826112098,"user_tz":-330,"elapsed":34076,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&redirect_uri=urn%3aietf%3awg%3aoauth%3a2.0%3aoob&response_type=code&scope=email%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdocs.test%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive.photos.readonly%20https%3a%2f%2fwww.googleapis.com%2fauth%2fpeopleapi.readonly\n","\n","Enter your authorization code:\n","··········\n","Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"awGd0JqxXha3","colab_type":"code","colab":{}},"source":["df = pd.read_csv('/content/drive/My Drive/smsspamcollection.tsv', sep='\\t')"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"tJaneKedYOlL","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":204},"outputId":"8d0e16c2-78db-432a-adae-e0b6002a5165","executionInfo":{"status":"ok","timestamp":1578826306831,"user_tz":-330,"elapsed":826,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["df.head()"],"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>label</th>\n","      <th>message</th>\n","      <th>length</th>\n","      <th>punct</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>ham</td>\n","      <td>Go until jurong point, crazy.. Available only ...</td>\n","      <td>111</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>ham</td>\n","      <td>Ok lar... Joking wif u oni...</td>\n","      <td>29</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>spam</td>\n","      <td>Free entry in 2 a wkly comp to win FA Cup fina...</td>\n","      <td>155</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>ham</td>\n","      <td>U dun say so early hor... U c already then say...</td>\n","      <td>49</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>ham</td>\n","      <td>Nah I don't think he goes to usf, he lives aro...</td>\n","      <td>61</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  label                                            message  length  punct\n","0   ham  Go until jurong point, crazy.. Available only ...     111      9\n","1   ham                      Ok lar... Joking wif u oni...      29      6\n","2  spam  Free entry in 2 a wkly comp to win FA Cup fina...     155      6\n","3   ham  U dun say so early hor... U c already then say...      49      6\n","4   ham  Nah I don't think he goes to usf, he lives aro...      61      2"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"code","metadata":{"id":"bnUC66XFYZEA","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":102},"outputId":"b59cf171-a2c8-4311-ea22-b29b52291a18","executionInfo":{"status":"ok","timestamp":1578826714395,"user_tz":-330,"elapsed":2689,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["#Machine learning models require complete data. Check if data missing \n","\n","df.isnull().sum()"],"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["label      0\n","message    0\n","length     0\n","punct      0\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"code","metadata":{"id":"6oJvCPwvZsce","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"0005c730-c4f3-456a-9d23-620fecd88375","executionInfo":{"status":"ok","timestamp":1578826725637,"user_tz":-330,"elapsed":3766,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["len(df)"],"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["5572"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"code","metadata":{"id":"lZQ0bZWAZ-lC","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"e3a53d29-fede-4923-bbff-5e026ca3a1f5","executionInfo":{"status":"ok","timestamp":1578827382986,"user_tz":-330,"elapsed":822,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["df['label'].unique()"],"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['ham', 'spam'], dtype=object)"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"code","metadata":{"id":"3RF0PQbncfyC","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":68},"outputId":"2849694e-fec5-4fde-fbe5-bef2e2e20bdc","executionInfo":{"status":"ok","timestamp":1578827408459,"user_tz":-330,"elapsed":876,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["df['label'].value_counts()"],"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["ham     4825\n","spam     747\n","Name: label, dtype: int64"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"code","metadata":{"id":"6Ixtzx8WcmA0","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":269},"outputId":"957b2003-13fc-46a1-9613-670f3373e040","executionInfo":{"status":"ok","timestamp":1578827636291,"user_tz":-330,"elapsed":1558,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["import matplotlib.pyplot as plt\n","%matplotlib inline\n","\n","plt.xscale('log')\n","bins = 1.15**(np.arange(0,50))\n","plt.hist(df[df['label']=='ham']['length'],bins=bins,alpha=0.8)\n","plt.hist(df[df['label']=='spam']['length'],bins=bins,alpha=0.8)\n","plt.legend(('ham','spam'))\n","plt.show()"],"execution_count":10,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n/wc40ROJQvkPuAAAAABJRU5ErkJggg==\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"ZttXTzmFddbj","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":170},"outputId":"3941fb54-febc-4df3-e762-0ac4caf22c91","executionInfo":{"status":"ok","timestamp":1578827878770,"user_tz":-330,"elapsed":2119,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["df['punct'].describe()"],"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count    5572.000000\n","mean        4.177495\n","std         4.623919\n","min         0.000000\n","25%         2.000000\n","50%         3.000000\n","75%         6.000000\n","max       133.000000\n","Name: punct, dtype: float64"]},"metadata":{"tags":[]},"execution_count":11}]},{"cell_type":"code","metadata":{"id":"Z1-2BJ1oeYiZ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":269},"outputId":"6008c3b2-fdfb-4664-db6c-a682d090cb1b","executionInfo":{"status":"ok","timestamp":1578827901058,"user_tz":-330,"elapsed":1455,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["plt.xscale('log')\n","bins = 1.5**(np.arange(0,15))\n","plt.hist(df[df['label']=='ham']['punct'],bins=bins,alpha=0.8)\n","plt.hist(df[df['label']=='spam']['punct'],bins=bins,alpha=0.8)\n","plt.legend(('ham','spam'))\n","plt.show()"],"execution_count":12,"outputs":[{"output_type":"display_data","data":{"image/png":"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\nns02qQAAAABJRU5ErkJggg==\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"8e-0xUTIeeIU","colab_type":"code","colab":{}},"source":["from sklearn.model_selection import train_test_split"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"bgjQw_RgenqB","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":850},"outputId":"bf5d63de-600d-495f-caca-9e5ea8966ee1","executionInfo":{"status":"ok","timestamp":1578828033175,"user_tz":-330,"elapsed":1721,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["train_test_split()"],"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[      length  punct\n"," 3226      32      3\n"," 118       72      4\n"," 2732      53      1\n"," 1040      51      2\n"," 2661      33      1\n"," ...      ...    ...\n"," 2864     138     14\n"," 282      141     12\n"," 2625      27      7\n"," 4082      25      2\n"," 1328     125      8\n"," \n"," [4179 rows x 2 columns],       length  punct\n"," 4181      67      5\n"," 799       31      1\n"," 5174      55      2\n"," 3615      12      1\n"," 4244       7      3\n"," ...      ...    ...\n"," 389      155      4\n"," 3015      46      2\n"," 2248     159      3\n"," 710      160      6\n"," 5532      40      0\n"," \n"," [1393 rows x 2 columns], 3226     ham\n"," 118      ham\n"," 2732     ham\n"," 1040     ham\n"," 2661     ham\n","         ... \n"," 2864     ham\n"," 282      ham\n"," 2625     ham\n"," 4082     ham\n"," 1328    spam\n"," Name: label, Length: 4179, dtype: object, 4181     ham\n"," 799      ham\n"," 5174     ham\n"," 3615     ham\n"," 4244     ham\n","         ... \n"," 389     spam\n"," 3015     ham\n"," 2248    spam\n"," 710     spam\n"," 5532     ham\n"," Name: label, Length: 1393, dtype: object]"]},"metadata":{"tags":[]},"execution_count":17}]},{"cell_type":"code","metadata":{"id":"xwY_7sxkeu0u","colab_type":"code","colab":{}},"source":["X = df[['length', 'punct']]\n","\n","y = df['label']"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"luRW-yxJe9Rm","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"outputId":"f0dea4bf-82c6-4e30-8879-6b7a64142f17","executionInfo":{"status":"ok","timestamp":1578828135861,"user_tz":-330,"elapsed":4113,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["help(train_test_split)"],"execution_count":18,"outputs":[{"output_type":"stream","text":["Help on function train_test_split in module sklearn.model_selection._split:\n","\n","train_test_split(*arrays, **options)\n","    Split arrays or matrices into random train and test subsets\n","    \n","    Quick utility that wraps input validation and\n","    ``next(ShuffleSplit().split(X, y))`` and application to input data\n","    into a single call for splitting (and optionally subsampling) data in a\n","    oneliner.\n","    \n","    Read more in the :ref:`User Guide <cross_validation>`.\n","    \n","    Parameters\n","    ----------\n","    *arrays : sequence of indexables with same length / shape[0]\n","        Allowed inputs are lists, numpy arrays, scipy-sparse\n","        matrices or pandas dataframes.\n","    \n","    test_size : float, int or None, optional (default=None)\n","        If float, should be between 0.0 and 1.0 and represent the proportion\n","        of the dataset to include in the test split. If int, represents the\n","        absolute number of test samples. If None, the value is set to the\n","        complement of the train size. If ``train_size`` is also None, it will\n","        be set to 0.25.\n","    \n","    train_size : float, int, or None, (default=None)\n","        If float, should be between 0.0 and 1.0 and represent the\n","        proportion of the dataset to include in the train split. If\n","        int, represents the absolute number of train samples. If None,\n","        the value is automatically set to the complement of the test size.\n","    \n","    random_state : int, RandomState instance or None, optional (default=None)\n","        If int, random_state is the seed used by the random number generator;\n","        If RandomState instance, random_state is the random number generator;\n","        If None, the random number generator is the RandomState instance used\n","        by `np.random`.\n","    \n","    shuffle : boolean, optional (default=True)\n","        Whether or not to shuffle the data before splitting. If shuffle=False\n","        then stratify must be None.\n","    \n","    stratify : array-like or None (default=None)\n","        If not None, data is split in a stratified fashion, using this as\n","        the class labels.\n","    \n","    Returns\n","    -------\n","    splitting : list, length=2 * len(arrays)\n","        List containing train-test split of inputs.\n","    \n","        .. versionadded:: 0.16\n","            If the input is sparse, the output will be a\n","            ``scipy.sparse.csr_matrix``. Else, output type is the same as the\n","            input type.\n","    \n","    Examples\n","    --------\n","    >>> import numpy as np\n","    >>> from sklearn.model_selection import train_test_split\n","    >>> X, y = np.arange(10).reshape((5, 2)), range(5)\n","    >>> X\n","    array([[0, 1],\n","           [2, 3],\n","           [4, 5],\n","           [6, 7],\n","           [8, 9]])\n","    >>> list(y)\n","    [0, 1, 2, 3, 4]\n","    \n","    >>> X_train, X_test, y_train, y_test = train_test_split(\n","    ...     X, y, test_size=0.33, random_state=42)\n","    ...\n","    >>> X_train\n","    array([[4, 5],\n","           [0, 1],\n","           [6, 7]])\n","    >>> y_train\n","    [2, 0, 3]\n","    >>> X_test\n","    array([[2, 3],\n","           [8, 9]])\n","    >>> y_test\n","    [1, 4]\n","    \n","    >>> train_test_split(y, shuffle=False)\n","    [[0, 1, 2], [3, 4]]\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"1MxDLWVhfWzO","colab_type":"code","colab":{}},"source":["X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=42)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"v4lX3-LegESp","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"5cbbc2a9-10c6-4553-988c-e1fa74a3107f","executionInfo":{"status":"ok","timestamp":1578828329492,"user_tz":-330,"elapsed":815,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["X_train.shape"],"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(3900, 2)"]},"metadata":{"tags":[]},"execution_count":20}]},{"cell_type":"code","metadata":{"id":"WJHZ_yVigGwP","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"2f76b299-0f99-4fab-be1d-072572320a58","executionInfo":{"status":"ok","timestamp":1578828365370,"user_tz":-330,"elapsed":817,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["X_test.shape"],"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1672, 2)"]},"metadata":{"tags":[]},"execution_count":21}]},{"cell_type":"code","metadata":{"id":"PKHh6p6vgPpE","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":419},"outputId":"82f6b738-9acd-4943-d1e1-7ce456d9baca","executionInfo":{"status":"ok","timestamp":1578828424297,"user_tz":-330,"elapsed":914,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["X_test"],"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>length</th>\n","      <th>punct</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3245</th>\n","      <td>147</td>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>944</th>\n","      <td>116</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1044</th>\n","      <td>102</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2484</th>\n","      <td>45</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>812</th>\n","      <td>112</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2505</th>\n","      <td>160</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>2525</th>\n","      <td>99</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>4975</th>\n","      <td>62</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>650</th>\n","      <td>97</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>4463</th>\n","      <td>95</td>\n","      <td>4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1672 rows × 2 columns</p>\n","</div>"],"text/plain":["      length  punct\n","3245     147     14\n","944      116      1\n","1044     102      3\n","2484      45      0\n","812      112      4\n","...      ...    ...\n","2505     160     10\n","2525      99      5\n","4975      62      5\n","650       97     11\n","4463      95      4\n","\n","[1672 rows x 2 columns]"]},"metadata":{"tags":[]},"execution_count":22}]},{"cell_type":"code","metadata":{"id":"SqZbbqlJgeAW","colab_type":"code","colab":{}},"source":["from sklearn.linear_model import LogisticRegression"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"20zDLzj2hH5V","colab_type":"code","colab":{}},"source":["lr_model = LogisticRegression(solver='lbfgs')"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"bT3LyGtLhQ8s","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":102},"outputId":"c417dc64-32f1-48b2-8188-b21fcb1ec4cc","executionInfo":{"status":"ok","timestamp":1578828681652,"user_tz":-330,"elapsed":803,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["lr_model.fit(X_train, y_train)"],"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,\n","                   intercept_scaling=1, l1_ratio=None, max_iter=100,\n","                   multi_class='auto', n_jobs=None, penalty='l2',\n","                   random_state=None, solver='lbfgs', tol=0.0001, verbose=0,\n","                   warm_start=False)"]},"metadata":{"tags":[]},"execution_count":25}]},{"cell_type":"code","metadata":{"id":"5PLdIhbAhc1R","colab_type":"code","colab":{}},"source":["from sklearn import metrics"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"jb70E5Dgj8s1","colab_type":"code","colab":{}},"source":["predictions = lr_model.predict(X_test)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"b0F1YxzgkLGt","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"adfe52d8-953d-44b8-f251-0f74401fe10d","executionInfo":{"status":"ok","timestamp":1578829399194,"user_tz":-330,"elapsed":1024,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["predictions"],"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['ham', 'ham', 'ham', ..., 'ham', 'ham', 'ham'], dtype=object)"]},"metadata":{"tags":[]},"execution_count":28}]},{"cell_type":"code","metadata":{"id":"MOy931vwkL_s","colab_type":"code","colab":{}},"source":["#y_test"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"6g_1vIBuu9dv","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":51},"outputId":"b5124ce4-b1b0-44c3-d32b-a8b77e327ae3","executionInfo":{"status":"ok","timestamp":1578832250831,"user_tz":-330,"elapsed":999,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["print(metrics.confusion_matrix(y_test,predictions))"],"execution_count":30,"outputs":[{"output_type":"stream","text":["[[1404   44]\n"," [ 219    5]]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"6j1MJ3bVvEM_","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":111},"outputId":"5933a2ad-f729-4783-b557-6dee32e6bdee","executionInfo":{"status":"ok","timestamp":1578832422937,"user_tz":-330,"elapsed":858,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["# You can make the confusion matrix less confusing by adding labels:\n","df = pd.DataFrame(metrics.confusion_matrix(y_test,predictions), index=['ham','spam'], columns=['ham','spam'])\n","df"],"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ham</th>\n","      <th>spam</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>ham</th>\n","      <td>1404</td>\n","      <td>44</td>\n","    </tr>\n","    <tr>\n","      <th>spam</th>\n","      <td>219</td>\n","      <td>5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["       ham  spam\n","ham   1404    44\n","spam   219     5"]},"metadata":{"tags":[]},"execution_count":31}]},{"cell_type":"code","metadata":{"id":"zQX_fiSNvuQB","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":170},"outputId":"1b55f41b-f3c1-4a88-f2bd-434cabcc1503","executionInfo":{"status":"ok","timestamp":1578832555267,"user_tz":-330,"elapsed":849,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["# Print a classification report\n","print(metrics.classification_report(y_test,predictions))"],"execution_count":32,"outputs":[{"output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","         ham       0.87      0.97      0.91      1448\n","        spam       0.10      0.02      0.04       224\n","\n","    accuracy                           0.84      1672\n","   macro avg       0.48      0.50      0.48      1672\n","weighted avg       0.76      0.84      0.80      1672\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"b0cU8BypwOjl","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"6653a858-15a0-4218-8980-44395bd8ea13","executionInfo":{"status":"ok","timestamp":1578832746663,"user_tz":-330,"elapsed":791,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["# Print the overall accuracy\n","print(metrics.accuracy_score(y_test,predictions))"],"execution_count":33,"outputs":[{"output_type":"stream","text":["0.8427033492822966\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"9CzHw6PNw9SK","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"1d7cf2a0-d452-46fe-879a-86c775ad3081","executionInfo":{"status":"ok","timestamp":1578832825044,"user_tz":-330,"elapsed":852,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["#Naive Bayes model\n","\n","from sklearn.naive_bayes import MultinomialNB\n","\n","nb_model = MultinomialNB()\n","\n","nb_model.fit(X_train, y_train)"],"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["MultinomialNB(alpha=1.0, class_prior=None, fit_prior=True)"]},"metadata":{"tags":[]},"execution_count":34}]},{"cell_type":"code","metadata":{"id":"rAqv8iSUxQa3","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":51},"outputId":"75215c50-be05-43ea-d2ff-d7c0fd3fb0c1","executionInfo":{"status":"ok","timestamp":1578832843518,"user_tz":-330,"elapsed":856,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["predictions = nb_model.predict(X_test)\n","print(metrics.confusion_matrix(y_test,predictions))"],"execution_count":35,"outputs":[{"output_type":"stream","text":["[[1438   10]\n"," [ 224    0]]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"AaQaNXLhxU7W","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":170},"outputId":"2875a126-8f5b-486d-e579-e7cffcc9c1fc","executionInfo":{"status":"ok","timestamp":1578832912186,"user_tz":-330,"elapsed":796,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["print(metrics.classification_report(y_test,predictions))"],"execution_count":36,"outputs":[{"output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","         ham       0.87      0.99      0.92      1448\n","        spam       0.00      0.00      0.00       224\n","\n","    accuracy                           0.86      1672\n","   macro avg       0.43      0.50      0.46      1672\n","weighted avg       0.75      0.86      0.80      1672\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"tPRrEJP2xlsW","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"13507ff7-c18e-44c2-9286-f085fa6d2d02","executionInfo":{"status":"ok","timestamp":1578832929638,"user_tz":-330,"elapsed":861,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["print(metrics.accuracy_score(y_test,predictions))"],"execution_count":37,"outputs":[{"output_type":"stream","text":["0.8600478468899522\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"ekJaqdaCxp9Q","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":85},"outputId":"171b527b-d230-464f-d8e6-7c3e209afcc9","executionInfo":{"status":"ok","timestamp":1578833018602,"user_tz":-330,"elapsed":1075,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["#Support Vector Machine model\n","\n","from sklearn.svm import SVC\n","svc_model = SVC(gamma='auto')\n","svc_model.fit(X_train,y_train)"],"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["SVC(C=1.0, break_ties=False, cache_size=200, class_weight=None, coef0=0.0,\n","    decision_function_shape='ovr', degree=3, gamma='auto', kernel='rbf',\n","    max_iter=-1, probability=False, random_state=None, shrinking=True,\n","    tol=0.001, verbose=False)"]},"metadata":{"tags":[]},"execution_count":38}]},{"cell_type":"code","metadata":{"id":"C1rpw8ARx_n5","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":51},"outputId":"3beda986-8970-4a52-a225-bbe837dec96f","executionInfo":{"status":"ok","timestamp":1578833146057,"user_tz":-330,"elapsed":901,"user":{"displayName":"Venkatesh Nagandla","photoUrl":"","userId":"00105523213734113975"}}},"source":["predictions = svc_model.predict(X_test)\n","print(metrics.confusion_matrix(y_test,predictions))"],"execution_count":39,"outputs":[{"output_type":"stream","text":["[[1373   75]\n"," [ 121  103]]\n"],"name":"stdout"}]}]}